AWSTemplateFormatVersion: "2010-09-09"

Description: CodePipeline for res-rec-manager service
Outputs:
  ConfigBucketName:
    Description: The name of the config bucket
    Value: !Ref ConfigBucket
    Export:
      Name: 'RecResConfigBucketName'
  ConfigBucketArn:
    Description: The arn of the config bucket
    Value: !GetAtt ConfigBucket.Arn
    Export:
      Name: 'RecResConfigBucketArn'
Resources:
  CodePipelineMain:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: codepipeline-us-west-2-789836859937
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection # TODO: the fuck is this?
              Configuration:
                BranchName: main
                ConnectionArn: arn:aws:codestar-connections:us-west-2:379689532145:connection/d745d49f-df04-4df0-b6df-4dd5dd3a74d3
                FullRepositoryId: stephen-terrell/rec-res-manager
                OutputArtifactFormat: CODE_ZIP
              Namespace: SourceVariables
              OutputArtifacts:
                - Name: sourceArtifact
              RunOrder: 1
        -
          Name: Build
          Actions:
            -
              Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: rec-res-service-build
              Namespace: BuildVariables
              InputArtifacts:
                - Name: sourceArtifact
              OutputArtifacts:
                - Name: buildArtifact
                - Name: configArtifact
              Region: us-west-2
              RunOrder: 1
        -
          Name: DeployServiceStack
          Actions:
            -
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: service-stack-change-set-dev
                ParameterOverrides: !Sub |
                  {
                    "buildArtifactBucketName": { "Fn::GetArtifactAtt": ["buildArtifact", "BucketName"]},
                    "buildArtifactObjectKey": { "Fn::GetArtifactAtt": ["buildArtifact", "ObjectKey"]},
                    "configBucketArn": "${ConfigBucket.Arn}",
                    "env": "dev"
                  }
                RoleArn: !GetAtt CloudFormationTrustRole.Arn
                StackName: rec-res-service-stack-dev
                TemplatePath: buildArtifact::configuration/cloudformation/service-stack.yaml
              InputArtifacts:
                - Name: buildArtifact
              Name: GenerateServiceStackChangeSet
              RunOrder: 1
            -
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: service-stack-change-set-dev
                StackName: rec-res-service-stack-dev
              Name: ExecuteServiceStackChangeSet
              RunOrder: 2

  CodeBuild:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: rec-res-service-build
      Source:
        Type: CODEPIPELINE
        BuildSpec: configuration/codebuild/buildspec.yml
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:6.0
        ComputeType: BUILD_GENERAL1_SMALL
        PrivilegedMode: false
        ImagePullCredentialsType: CODEBUILD
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      TimeoutInMinutes: 15
      QueuedTimeoutInMinutes: 120
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
        S3Logs:
          Status: DISABLED
          EncryptionDisabled: false
      Visibility: PRIVATE

  ConfigBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Join
        - '-'
        - [ 'rec-res-config', !Ref "AWS::Region", !Ref "AWS::AccountId" ]

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        -
          PolicyName: rec-res-codebuild-service-role-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "logs:*"
                Resource:
                  - "*"
              -
                Effect: "Allow"
                Action:
                  - "s3:*" # this is bad, but i cannot for the life of me figure out what perms github needs here
                Resource:
                  - "arn:aws:s3:::codepipeline-us-west-2-789836859937"
                  - "arn:aws:s3:::codepipeline-us-west-2-789836859937/*"
              -
                Effect: "Allow"
                Action:
                  - "codebuild:CreateReport"
                  - "codebuild:CreateReportGroup"
                  - "codebuild:BatchPutCodeCoverages"
                  - "codebuild:BatchPutTestCases"
                  - "codebuild:UpdateReport"
                Resource:
                  - "*"
      MaxSessionDuration: 3600
      Path: "/service-role/"
      RoleName: rec-res-code-build-service-role

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        -
          PolicyName: rec-res-codepipeline-service-role-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "codestar-connections:UseConnection"
                Resource:
                  - "*"
              -
                Effect: "Allow"
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuildBatches"
                  - "codebuild:StartBuildBatch"
                Resource:
                  - "*"
              -
                Effect: "Allow"
                Action:
                  - "s3:*" # this is bad, but i cannot for the life of me figure out what perms github needs here
                Resource:
                  - "arn:aws:s3:::codepipeline-us-west-2-789836859937"
                  - "arn:aws:s3:::codepipeline-us-west-2-789836859937/*"
              -
                Effect: "Allow"
                Action:
                  - "s3:Put*"
                Resource:
                  - !GetAtt ConfigBucket.Arn
                  - !Join
                    - ''
                    - [ !GetAtt ConfigBucket.Arn, '/*' ]
              -
                Effect: "Allow"
                Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:SetStackPolicy'
                Resource:
                  - '*'
              -
                Effect: "Allow"
                Action:
                  - "iam:PassRole"
                Resource:
                  - !GetAtt CloudFormationTrustRole.Arn
              -
                Effect: "Allow"
                Action:
                  - "lambda:InvokeFunction"
                Resource: !Join
                  - ":"
                  - [ "arn:aws:lambda", !Ref "AWS::Region", !Ref "AWS::AccountId", "function:rec-res-process-user-config-file" ]
      MaxSessionDuration: 3600
      Path: "/service-role/"
      RoleName: rec-res-codepipeline-service-role

  CloudFormationTrustRole:
    Type: AWS::IAM::Role
    Description: Creating service role in IAM for AWS CloudFormation
    Properties:
      RoleName: rec-res-cloudformation-service-stack-role
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
      Path: /
      Policies:
        -
          PolicyName: rec-res-cloudformation-service-stack-policy
          PolicyDocument:
            Statement:
              -
                Action:
                  - iam:CreateRole
                  - iam:AttachRolePolicy
                  - iam:PutRolePolicy
                  - iam:PassRole
                  - iam:DetachRolePolicy
                  - iam:ListRolePolicies
                  - iam:GetRole
                  - iam:DeleteRolePolicy
                  - iam:UpdateRoleDescription
                  - iam:ListRoles
                  - iam:DeleteRole
                  - iam:GetRolePolicy
                  - iam:CreateInstanceProfile
                  - iam:AddRoleToInstanceProfile
                  - iam:DeleteInstanceProfile
                  - iam:GetInstanceProfile
                  - iam:ListInstanceProfiles
                  - iam:ListInstanceProfilesForRole
                  - iam:RemoveRoleFromInstanceProfile
                Effect: Allow
                Resource: '*'
              -
                Action:
                  - codedeploy:*
                Effect: Allow
                Resource: '*'
              -
                Action:
                  - lambda:*
                Effect: Allow
                Resource: '*'
              -
                Action:
                  - s3:GetObject
                Effect: Allow
                Resource:
                  - "arn:aws:s3:::codepipeline-us-west-2-789836859937"
                  - "arn:aws:s3:::codepipeline-us-west-2-789836859937/*"
              -
                Action:
                  - 'sns:*'
                Effect: Allow
                Resource:
                  - '*'
              -
                Action:
                  - 's3:CreateBucket'
                  - 's3:DeleteBucket'
                Effect: Allow
                Resource:
                  - '*'
              -
                Action:
                  - 'events:*'
                Effect: Allow
                Resource:
                  - '*'
              -
                Action:
                  - 'apigateway:*'
                Effect: Allow
                Resource:
                  - '*'
              -
                Action:
                  - 'sqs:*'
                Effect: Allow
                Resource:
                  - '*'
